/*
 * Matrimonial API - OpenAPI 3.0
 *
 * Design and definition of Matrimonial APIs created for practice and teaching
 *
 * OpenAPI spec version: 1.0.11
 * Contact: floatingrays@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using MatrimonialApi.Attributes;
using MatrimonialApi.Security;
using Microsoft.AspNetCore.Authorization;
using MatrimonialApi.Models;
using Microsoft.AspNetCore.Authentication.JwtBearer;

namespace MatrimonialApi.Controllers
{ 
  /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class HomeSearchApiController : ControllerBase
    {
        /// <summary>
        /// Search on home page
        /// </summary>
        /// <remarks>Search on home page</remarks>
        /// <param name="body">Search Query</param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid input</response>
        /// <response code="422">Validation exception</response>
        /// <response code="500">An error occured while processing the request.</response>
        /// <response code="0">Default error</response>
        [HttpPost]
        [Route("/api/HomeSearch")]
        [Authorize(AuthenticationSchemes = BearerAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("HomePageProfileSearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ShortProfileDTO>), description: "Successful operation")]
        public virtual IActionResult HomePageProfileSearch([FromBody] HomeSearch body)
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ShortProfile>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);
            string exampleJson = null;
            exampleJson = "[ {\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"cityName\" : \"cityName\",\n  \"stateName\" : \"stateName\",\n  \"imageURL\" : \"imageURL\",\n  \"occupationName\" : \"occupationName\",\n  \"middleName\" : \"middleName\",\n  \"id\" : 0\n}, {\n  \"firstName\" : \"firstName\",\n  \"lastName\" : \"lastName\",\n  \"cityName\" : \"cityName\",\n  \"stateName\" : \"stateName\",\n  \"imageURL\" : \"imageURL\",\n  \"occupationName\" : \"occupationName\",\n  \"middleName\" : \"middleName\",\n  \"id\" : 0\n} ]";

            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<ShortProfileDTO>>(exampleJson)
            : default(List<ShortProfileDTO>);            //TODO: Change the data returned
            return new ObjectResult(example);
           }
    }
}
