/*
 * Matrimonial API - OpenAPI 3.0
 *
 * Design and definition of Matrimonial APIs created for practice and teaching
 *
 * OpenAPI spec version: 1.0.11
 * Contact: floatingrays@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using MatrimonialApi.Attributes;
using MatrimonialApi.Security;
using Microsoft.AspNetCore.Authorization;
using MatrimonialApi.Models;

namespace MatrimonialApi.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class CommunicationApiController : ControllerBase
    { 
        /// <summary>
        /// Add a communication
        /// </summary>
        /// <remarks>Add a communication</remarks>
        /// <param name="body">Add a communication</param>
        /// <param name="xRequestAuth"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid input</response>
        /// <response code="422">Validation exception</response>
        /// <response code="500">An error occured while processing the request.</response>
        /// <response code="0">Default error</response>
        [HttpPost]
        [Route("/api/Communication")]
        [ValidateModelState]
        [SwaggerOperation("AddCommunication")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<CommunicationList>), description: "Successful operation")]
        public virtual IActionResult AddCommunication([FromBody]Communication body, [FromHeader][Required()]string xRequestAuth)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<CommunicationList>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);
            string exampleJson = null;
            exampleJson = "[ {\n  \"currentPageNumber\" : 0,\n  \"Communications\" : [ {\n    \"commnicationType\" : \"email\",\n    \"subject\" : \"subject\",\n    \"createdDateTime\" : \"createdDateTime\",\n    \"from\" : \"from\",\n    \"to\" : \"to\",\n    \"messageDeliveredStatus\" : \"success\",\n    \"message\" : \"message\"\n  }, {\n    \"commnicationType\" : \"email\",\n    \"subject\" : \"subject\",\n    \"createdDateTime\" : \"createdDateTime\",\n    \"from\" : \"from\",\n    \"to\" : \"to\",\n    \"messageDeliveredStatus\" : \"success\",\n    \"message\" : \"message\"\n  } ],\n  \"range\" : 6\n}, {\n  \"currentPageNumber\" : 0,\n  \"Communications\" : [ {\n    \"commnicationType\" : \"email\",\n    \"subject\" : \"subject\",\n    \"createdDateTime\" : \"createdDateTime\",\n    \"from\" : \"from\",\n    \"to\" : \"to\",\n    \"messageDeliveredStatus\" : \"success\",\n    \"message\" : \"message\"\n  }, {\n    \"commnicationType\" : \"email\",\n    \"subject\" : \"subject\",\n    \"createdDateTime\" : \"createdDateTime\",\n    \"from\" : \"from\",\n    \"to\" : \"to\",\n    \"messageDeliveredStatus\" : \"success\",\n    \"message\" : \"message\"\n  } ],\n  \"range\" : 6\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<CommunicationList>>(exampleJson)
                        : default(List<CommunicationList>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get all the communication done till date
        /// </summary>
        /// <remarks>Get all the communication done till date</remarks>
        /// <param name="xRequestAuth"></param>
        /// <param name="pageNumber"></param>
        /// <param name="range"></param>
        /// <response code="200">Successful operation</response>
        /// <response code="400">Invalid input</response>
        /// <response code="422">Validation exception</response>
        /// <response code="500">An error occured while processing the request.</response>
        /// <response code="0">Default error</response>
        [HttpGet]
        [Route("/api/Communication")]
        [ValidateModelState]
        [SwaggerOperation("GetCommunication")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<CommunicationList>), description: "Successful operation")]
        public virtual IActionResult GetCommunication([FromHeader][Required()]string xRequestAuth, [FromQuery][Required()]int? pageNumber, [FromQuery][Required()]int? range)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<CommunicationList>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);

            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0);
            string exampleJson = null;
            exampleJson = "[ {\n  \"currentPageNumber\" : 0,\n  \"Communications\" : [ {\n    \"commnicationType\" : \"email\",\n    \"subject\" : \"subject\",\n    \"createdDateTime\" : \"createdDateTime\",\n    \"from\" : \"from\",\n    \"to\" : \"to\",\n    \"messageDeliveredStatus\" : \"success\",\n    \"message\" : \"message\"\n  }, {\n    \"commnicationType\" : \"email\",\n    \"subject\" : \"subject\",\n    \"createdDateTime\" : \"createdDateTime\",\n    \"from\" : \"from\",\n    \"to\" : \"to\",\n    \"messageDeliveredStatus\" : \"success\",\n    \"message\" : \"message\"\n  } ],\n  \"range\" : 6\n}, {\n  \"currentPageNumber\" : 0,\n  \"Communications\" : [ {\n    \"commnicationType\" : \"email\",\n    \"subject\" : \"subject\",\n    \"createdDateTime\" : \"createdDateTime\",\n    \"from\" : \"from\",\n    \"to\" : \"to\",\n    \"messageDeliveredStatus\" : \"success\",\n    \"message\" : \"message\"\n  }, {\n    \"commnicationType\" : \"email\",\n    \"subject\" : \"subject\",\n    \"createdDateTime\" : \"createdDateTime\",\n    \"from\" : \"from\",\n    \"to\" : \"to\",\n    \"messageDeliveredStatus\" : \"success\",\n    \"message\" : \"message\"\n  } ],\n  \"range\" : 6\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<CommunicationList>>(exampleJson)
                        : default(List<CommunicationList>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
